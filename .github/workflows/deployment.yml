# This GHA is responsible for APIM deployment.
# Deployment is initiated using `az cli` bash script.
#
# Standard Azure naming convention has been followed:
# https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming
#
#
# Following Azure services are consumed:
# 1. Azure resource group - https://learn.microsoft.com/en-us/cli/azure/group?view=azure-cli-latest#az-group-create
# 2. Azure container registry - https://learn.microsoft.com/en-us/cli/azure/acr?view=azure-cli-latest#az-acr-create
# 3. Azure container app environment - https://learn.microsoft.com/en-us/azure/container-apps/environment
# 4. Azure container app - https://learn.microsoft.com/en-us/azure/container-apps/containers
#
#
# Execution
# *********
# GHA is only invoked when following conditions are satisfied:
# 1. Push to the `dev`, `staging` and `production` branches only.
# 2. Any modifications to atleast one of the `paths` targets.

name: Deployment üöÄ
run-name: APIM deployment for ${{ github.repository }}

on:
  push:
    branches:
      - dev
      - staging
      - production

    paths:
      - "src/**"
      - "package.json"
      - "package-lock.json"
      - "Dockerfile"
      - "tsconfig.json"
      - "tsconfig.build.json"
      - ".github/workflows/deployment.yml"

env:
  PRODUCT: apim
  ENVIRONMENT: ${{ github.ref_name }}
  TIMEZONE: "Europe/London"
  # Base artifact
  FROM: latest

jobs:
  # 1. Setup deployment variables
  setup:
    name: Setup üîß
    runs-on: [self-hosted, APIM, deployment]
    outputs:
      product: ${{ env.PRODUCT }}
      environment: ${{ env.ENVIRONMENT }}
      timezone: ${{ env.TIMEZONE }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.ENVIRONMENT }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.TIMEZONE }}"

  # 2. TFS micro-service deployment
  tfs:
    name: TFS üì¶Ô∏è
    needs: setup
    environment: ${{ needs.setup.outputs.environment }}
    env:
      NAME: tfs
      NAME_UPPERCASE: TFS
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}
    runs-on: [self-hosted, APIM, deployment]
    steps:
      - name: Repository üóÉÔ∏è
        uses: actions/checkout@v3

      - name: Azure üîê
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Defaults ‚ú®
        uses: Azure/cli@v1.0.8
        with:
          inlineScript: |
            # Basic
            az configure --defaults location=${{ vars.REGION }}
            az configure --defaults group=rg-${{ env.PRODUCT }}-${{ github.ref_name }}-${{ vars.VERSION }}

      - name: CLI üìù
        run: |
          echo ACR=$(az acr show -n $(az resource list --resource-type 'Microsoft.ContainerRegistry/registries' --query '[0].name' -o tsv) --query loginServer -o tsv) >> $GITHUB_ENV
          echo ACR_USER=$(az acr show -n $(az resource list --resource-type 'Microsoft.ContainerRegistry/registries' --query '[0].name' -o tsv) --query name -o tsv) >> $GITHUB_ENV
          echo CA_NAME=$(az resource list --resource-type 'Microsoft.App/containerApps' --query '[?contains(name, `${{ env.NAME }}`)].name' -o tsv) >> $GITHUB_ENV
          echo APIM=$(az resource list --resource-type 'Microsoft.ApiManagement/service' --query '[0].name' -o tsv) >> $GITHUB_ENV
          echo API_ID=$(az apim api list --service-name $(az resource list --resource-type 'Microsoft.ApiManagement/service' --query '[0].name' -o tsv) --query '[?contains(displayName, `${{ env.NAME_UPPERCASE }}`)].name' -o tsv) >> $GITHUB_ENV

      - name: ACR üîê
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR }}
          username: ${{ env.ACR_USER }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Artifacts üóÉÔ∏è
        run: |
          docker build . \
          -t ${{ env.ACR }}/${{ env.NAME }}:${{ github.sha }} \
          -t ${{ env.ACR }}/${{ env.NAME }}:${{ env.FROM }}
          docker push ${{ env.ACR }}/${{ env.NAME }}:${{ github.sha }}
          docker push ${{ env.ACR }}/${{ env.NAME }}:${{ env.FROM }}

      - name: Revisions üîÄ
        uses: Azure/cli@v1.0.8
        with:
          inlineScript: |
            az containerapp update \
            --name ${{ env.CA_NAME }} \
            --container-name ${{ env.CA_NAME }} \
            --image ${{ env.ACR }}/${{ env.NAME }}:${{ env.FROM }} \
            --revision-suffix v${{ github.run_id }} \
            --set-env-vars \
              "PORT=${{ secrets.PORT }}" \
              "NODE_ENV=${{ secrets.NODE_ENV }}" \
              "TZ=${{ secrets.TZ }}" \
              "LOG_LEVEL=${{ vars.LOG_LEVEL }}" \
              "REDACT_LOGS=${{ vars.REDACT_LOGS }}" \
              "SINGLE_LINE_LOG_FORMAT=${{ vars.SINGLE_LINE_LOG_FORMAT }}" \
              "SWAGGER_USER=${{ secrets.SWAGGER_USER }}" \
              "SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }}" \
              "API_KEY=${{ secrets.API_KEY }}" \
              "ACBS_BASE_URL=${{ secrets.ACBS_BASE_URL }}" \
              "ACBS_MAX_REDIRECTS=${{ secrets.ACBS_MAX_REDIRECTS }}" \
              "ACBS_TIMEOUT=${{ secrets.ACBS_TIMEOUT }}" \
              "ACBS_USE_RETURN_EXCEPTION_HEADER=${{ vars.ACBS_USE_RETURN_EXCEPTION_HEADER }}" \
              "ACBS_AUTHENTICATION_API_KEY=${{ secrets.ACBS_AUTHENTICATION_API_KEY }}" \
              "ACBS_AUTHENTICATION_API_KEY_HEADER_NAME=${{ secrets.ACBS_AUTHENTICATION_API_KEY_HEADER_NAME }}" \
              "ACBS_AUTHENTICATION_BASE_URL=${{ secrets.ACBS_AUTHENTICATION_BASE_URL }}" \
              "ACBS_AUTHENTICATION_CLIENT_ID=${{ secrets.ACBS_AUTHENTICATION_CLIENT_ID }}" \
              "ACBS_AUTHENTICATION_ID_TOKEN_CACHE_TTL_IN_MILLISECONDS=${{ secrets.ACBS_AUTHENTICATION_ID_TOKEN_CACHE_TTL_IN_MILLISECONDS }}" \
              "ACBS_AUTHENTICATION_LOGIN_NAME=${{ secrets.ACBS_AUTHENTICATION_LOGIN_NAME }}" \
              "ACBS_AUTHENTICATION_MAX_REDIRECTS=${{ secrets.ACBS_AUTHENTICATION_MAX_REDIRECTS }}" \
              "ACBS_AUTHENTICATION_MAX_NUMBER_OF_RETRIES=${{ secrets.ACBS_AUTHENTICATION_MAX_NUMBER_OF_RETRIES }}" \
              "ACBS_AUTHENTICATION_PASSWORD=${{ secrets.ACBS_AUTHENTICATION_PASSWORD }}" \
              "ACBS_AUTHENTICATION_RETRY_DELAY_IN_MILLISECONDS=${{ secrets.ACBS_AUTHENTICATION_RETRY_DELAY_IN_MILLISECONDS }}" \
              "ACBS_AUTHENTICATION_TIMEOUT=${{ secrets.ACBS_AUTHENTICATION_TIMEOUT }}" \
              "APIM_MDM_URL=${{ secrets.APIM_MDM_URL }}" \
              "APIM_MDM_KEY=${{ secrets.APIM_MDM_KEY }}" \
              "APIM_MDM_VALUE=${{ secrets.APIM_MDM_VALUE }}" \
              "APIM_MDM_MAX_REDIRECTS=${{ secrets.APIM_MDM_MAX_REDIRECTS }}" \
              "APIM_MDM_TIMEOUT=${{ secrets.APIM_MDM_TIMEOUT }}"

      - name: Import ‚¨áÔ∏è
        if: ${{ '' != env.API_ID }}
        uses: Azure/cli@v1.0.8
        with:
          inlineScript: |
            # API specification import

            az apim api import \
            --path '${{ env.NAME }}' \
            --service-name ${{ env.APIM }} \
            --specification-format OpenApi \
            --api-id ${{ env.API_ID }} \
            --api-type http \
            --service-url https://$(az containerapp show --name ${{ env.CA_NAME }} --query properties.latestRevisionFqdn -o tsv) \
            --protocols https \
            --specification-url https://$(az containerapp show --name ${{ env.CA_NAME }} --query properties.latestRevisionFqdn -o tsv)/openapi/json \
            --subscription-required true
